{
	"compiler": {
		"version": "0.8.30+commit.73712a01"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_to",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "_contenido",
						"type": "string"
					}
				],
				"name": "enviarMensaje",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "mensajes",
				"outputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "contenido",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "pintarDestinatarioMensajes",
				"outputs": [],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"notice": "Implementar un contrato que permita al propietario del contrato enviar mensajes a otro usuario. Cada mensaje debe guardar: La dirección del remitente (from) //siempre es el propietario La dirección del destinatario (to) El contenido del mensaje (contenido) La fecha y hora en que fue enviado (timestamp) //block.timestamp Cada vez que se envíe un mensaje: Debe guardarse en una estructura (struct) Debe emitirse un evento para dejar registro público en la blockchain Debe pintar todos los mensajes con console.log Para agregar un nuevo mensaje deberia pasar al menos un minuto",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/9_EjercicioMensajes.sol": "EjercicioMensajes"
		},
		"evmVersion": "prague",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/9_EjercicioMensajes.sol": {
			"keccak256": "0x21f1f7fe5bb9d607b8ba49e9a80c61ef759463848c1afeaf1d6652d8552f8e32",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://4e734df1678f8bc71425ce916ad380d11d64304007f0e689c65487c18be9df3a",
				"dweb:/ipfs/QmQXSr3EnfWK4VXq6gTpsBBLGY5PFPdLmE3QiWwaRsm8r5"
			]
		},
		"hardhat/console.sol": {
			"keccak256": "0x7434453e6d3b7d0e5d0eb7846ffdbc27f0ccf3b163591263739b628074dc103a",
			"license": "MIT",
			"urls": [
				"bzz-raw://49355f780520494d1d5a0f01858385e51bb5280ce0ecfb960f16995065dca395",
				"dweb:/ipfs/QmSwJ6C5QLz6xKeQZS8wbwjU1KxRFTYfwbGmtzisd5sRW4"
			]
		}
	},
	"version": 1
}